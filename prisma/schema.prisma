// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  username        String?  @unique
  email           String?  @unique
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  forms Form[]
}

model Form {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  questions Question[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  responses Response[]


  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Response {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  submittedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.ObjectId
  answers     String
  formId      String   @db.ObjectId

  form Form @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model Question {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  options String[] 
  placeholder String 
  title String 
  type String
  formId String @db.ObjectId

  form Form @relation(fields: [formId], references: [id], onDelete: Cascade)
}